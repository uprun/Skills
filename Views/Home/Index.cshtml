@{
    ViewData["Title"] = "Skills";
}
<script>
    function applyMigrations()
    {
        $.ajax({
                type: "POST",
                url: "Home/ApplyMigrations",
                success: function(retrievedData) {

                    alert('success');

                },
                error:function(){
                    alert('error');

                },
                dataType: "json"
            });

    };
    
    function TagModel(data)
    {
        var self = this;
        self.id = ko.observable(data.id);
        self.tag = ko.observable(data.tag);
        self.value = ko.observable(data.value);
    };

    function NodeModel(data)
    {
        var self = this;
        self.id = ko.observable(data.id);
        
        self.tags = ko.observableArray(
            ko.utils.arrayMap(data.tags, function(elem) {
                    return new TagModel(elem);
                }
            )
        );
        
        self.ToProcessIsExpanded = ko.observable(false);
        self.ExpandToProcess = function() {
            self.ToProcessIsExpanded(true);
        };
        self.CollapseToProcess = function() {
            self.ToProcessIsExpanded(false);
        }

        self.UrlToAdd = ko.observable("");
        self.AddUrlToProcess = function()
        {
            if(self.UrlToAdd())
            {
                $.ajax({
                    type: "POST",
                    url: "Home/AddUrlToProcess",
                    data: {
                        HostNodeId: self.id(),
                        url : self.UrlToAdd()
                    }
                    ,
                    success: function(retrievedData) {

                       
                        self.ToProcess.push(retrievedData.url);
                        self.UrlToAdd("");

                    },
                    dataType: "json"
                });
            }
            
        };

    };


    function AvailableSkillsViewModel(data)
    {
        var self = this;
        if(data != null){
            self.skills = ko.observableArray(
                ko.utils.arrayMap(data, function(elem) {
                    return new NodeModel(elem);
                }
            ));
        }
        else
        {
            self.skills = ko.observableArray([]);
        }

        self.newSkillName = ko.observable("");
        self.AddNewSkill = function()
        {
            
            var skillName = self.newSkillName();
            var dataToSend = {
                    skillName : skillName
                };
            $.ajax({
                type: "POST",
                url: "Home/NewSkill",
                data: dataToSend,
                success: function(retrievedData) {

                    var newSkill = new NodeModel(retrievedData);
                    self.skills.push(newSkill);
                    self.newSkillName("");

                },
                dataType: "json"
            });
            
        };

        
        self.RetrieveDataFromServer = function() {
            $.ajax({
                type: "POST",
                url: "Home/GetSkillsAvailable",
                data: {
                    
                },
                success: function(data) {
                    var toAdd = ko.utils.arrayMap(data, function(elem) {
                        return new NodeModel(elem);
                    });
                    ko.utils.arrayPushAll(self.skills, toAdd);

                },
                dataType: "json"
            });

        };
        

    };

    $(document).ready(function()
    {
        var viewModel = new AvailableSkillsViewModel();
        ko.applyBindings(viewModel);
        viewModel.RetrieveDataFromServer();
    });
</script>
<div>
    <table>
        <thead>
            <tr>
                <th>
                    SkillName
                </th>
                <th>
                    ToProcess
                </th>
            </tr>
        </thead>
        <tbody data-bind="foreach: skills">
            <tr>
                <td >
                    <span data-bind="text: '#'"></span>
                    <span data-bind="text: id"></span>
                </td>
                <td>

                    <div data-bind="if: ToProcessIsExpanded">
                        <ul data-bind="foreach: tags">
                            <li >
                                <!-- <a data-bind="attr:{ href: $data, title: $data}, text: $data"></a> -->
                                <span data-bind="text: 'id'"></span>
                                <span data-bind="text: id"></span>
                                <span data-bind="text: 'tag'"></span>
                                <span data-bind="text: tag"></span>
                                <span data-bind="text: 'value'"></span>
                                <span data-bind="text: value"></span>
                            </li>
                        </ul>
                        <div>
                            <input type="text" data-bind="value: UrlToAdd" ></input>
                            <button data-bind="click: AddUrlToProcess" >add url</button>
                        </div>
                        <button data-bind="click: CollapseToProcess">Collapse</button>
                    </div>
                    <div data-bind="ifnot: ToProcessIsExpanded">
                        <div data-bind="if: tags().length > 0">
                            To Process <span data-bind="text: tags().length"></span>
                            <button data-bind="click: ExpandToProcess" >Expand</button>
                        </div>
                        
                        <div data-bind="if: (tags().length == 0)">
                            <button data-bind="click: ExpandToProcess" >Add some urls to process</button>
                        </div>
                    </div>
                    
                    
                </td>
            </tr>

        </tbody>
    </table>
    </div>
<div>
    <input type="text" data-bind="value: newSkillName" ></input>
    <button data-bind="click: AddNewSkill" >add skill</button>
    <br>
    <br>
    <br>
    <br>
    <button data-bind="click: applyMigrations" >apply Migrations</button>
    </div>


